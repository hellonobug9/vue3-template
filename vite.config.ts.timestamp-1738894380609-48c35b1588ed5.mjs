// vite.config.ts
import { unheadVueComposablesImports } from "file:///C:/Users/Charlie%20Tran/Example/vue3-template/node_modules/.pnpm/@unhead+vue@1.9.14_vue@3.4.29_typescript@5.5.2_/node_modules/@unhead/vue/dist/index.mjs";
import vue from "file:///C:/Users/Charlie%20Tran/Example/vue3-template/node_modules/.pnpm/@vitejs+plugin-vue@5.1.0_vite@5.3.1_@types+node@20.14.6__vue@3.4.29_typescript@5.5.2_/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import { fileURLToPath, URL } from "node:url";
import AutoImport from "file:///C:/Users/Charlie%20Tran/Example/vue3-template/node_modules/.pnpm/unplugin-auto-import@0.18.0_rollup@4.24.0/node_modules/unplugin-auto-import/dist/vite.js";
import Components from "file:///C:/Users/Charlie%20Tran/Example/vue3-template/node_modules/.pnpm/unplugin-vue-components@0.27.0_@babel+parser@7.24.7_rollup@4.24.0_vue@3.4.29_typescript@5.5.2_/node_modules/unplugin-vue-components/dist/vite.js";
import { defineConfig } from "file:///C:/Users/Charlie%20Tran/Example/vue3-template/node_modules/.pnpm/vite@5.3.1_@types+node@20.14.6/node_modules/vite/dist/node/index.js";

// package.json
var version = "5.4.0";

// vite.config.ts
var __vite_injected_original_import_meta_url = "file:///C:/Users/Charlie%20Tran/Example/vue3-template/vite.config.ts";
process.env.VITE_APP_VERSION = version;
if (process.env.NODE_ENV === "production") {
  process.env.VITE_APP_BUILD_EPOCH = (/* @__PURE__ */ new Date()).getTime().toString();
}
var vite_config_default = defineConfig({
  plugins: [
    vue(),
    AutoImport({
      imports: [
        "vue",
        "vue-router",
        "pinia",
        {
          "@/store": ["useStore"]
        },
        unheadVueComposablesImports
      ],
      dts: "auto-imports.d.ts",
      vueTemplate: true,
      eslintrc: {
        enabled: true
      }
    }),
    Components({
      dts: "components.d.ts"
    })
  ],
  resolve: {
    alias: {
      "@": fileURLToPath(new URL("./src", __vite_injected_original_import_meta_url))
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxcQ2hhcmxpZSBUcmFuXFxcXEV4YW1wbGVcXFxcdnVlMy10ZW1wbGF0ZVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxcQ2hhcmxpZSBUcmFuXFxcXEV4YW1wbGVcXFxcdnVlMy10ZW1wbGF0ZVxcXFx2aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vQzovVXNlcnMvQ2hhcmxpZSUyMFRyYW4vRXhhbXBsZS92dWUzLXRlbXBsYXRlL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgdW5oZWFkVnVlQ29tcG9zYWJsZXNJbXBvcnRzIH0gZnJvbSAnQHVuaGVhZC92dWUnXHJcbmltcG9ydCB2dWUgZnJvbSAnQHZpdGVqcy9wbHVnaW4tdnVlJ1xyXG5pbXBvcnQgeyBmaWxlVVJMVG9QYXRoLCBVUkwgfSBmcm9tICdub2RlOnVybCdcclxuaW1wb3J0IEF1dG9JbXBvcnQgZnJvbSAndW5wbHVnaW4tYXV0by1pbXBvcnQvdml0ZSdcclxuaW1wb3J0IENvbXBvbmVudHMgZnJvbSAndW5wbHVnaW4tdnVlLWNvbXBvbmVudHMvdml0ZSdcclxuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcclxuaW1wb3J0IHsgdmVyc2lvbiBhcyBwa2dWZXJzaW9uIH0gZnJvbSAnLi9wYWNrYWdlLmpzb24nXHJcblxyXG5wcm9jZXNzLmVudi5WSVRFX0FQUF9WRVJTSU9OID0gcGtnVmVyc2lvblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gIHByb2Nlc3MuZW52LlZJVEVfQVBQX0JVSUxEX0VQT0NIID0gbmV3IERhdGUoKS5nZXRUaW1lKCkudG9TdHJpbmcoKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xyXG4gIHBsdWdpbnM6IFtcclxuICAgIHZ1ZSgpLFxyXG4gICAgQXV0b0ltcG9ydCh7XHJcbiAgICAgIGltcG9ydHM6IFtcclxuICAgICAgICAndnVlJyxcclxuICAgICAgICAndnVlLXJvdXRlcicsXHJcbiAgICAgICAgJ3BpbmlhJyxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAnQC9zdG9yZSc6IFsndXNlU3RvcmUnXSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVuaGVhZFZ1ZUNvbXBvc2FibGVzSW1wb3J0cyxcclxuICAgICAgXSxcclxuICAgICAgZHRzOiAnYXV0by1pbXBvcnRzLmQudHMnLFxyXG4gICAgICB2dWVUZW1wbGF0ZTogdHJ1ZSxcclxuICAgICAgZXNsaW50cmM6IHtcclxuICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgfSksXHJcbiAgICBDb21wb25lbnRzKHtcclxuICAgICAgZHRzOiAnY29tcG9uZW50cy5kLnRzJyxcclxuICAgIH0pLFxyXG4gIF0sXHJcbiAgcmVzb2x2ZToge1xyXG4gICAgYWxpYXM6IHtcclxuICAgICAgJ0AnOiBmaWxlVVJMVG9QYXRoKG5ldyBVUkwoJy4vc3JjJywgaW1wb3J0Lm1ldGEudXJsKSksXHJcbiAgICB9LFxyXG4gIH0sXHJcbn0pXHJcbiIsICJ7XG4gIFwibmFtZVwiOiBcInZpdGUtdHMtdGFpbHdpbmQtc3RhcnRlclwiLFxuICBcInZlcnNpb25cIjogXCI1LjQuMFwiLFxuICBcInR5cGVcIjogXCJtb2R1bGVcIixcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcImRldlwiOiBcImNyb3NzLWVudiBERUJVRz0wIHZpdGVcIixcbiAgICBcImJ1aWxkXCI6IFwicnVuLXAgdHlwZS1jaGVjayBcXFwiYnVpbGQtb25seSB7QH1cXFwiIC0tXCIsXG4gICAgXCJidWlsZC1vbmx5XCI6IFwidml0ZSBidWlsZFwiLFxuICAgIFwicHJldmlld1wiOiBcInZpdGUgYnVpbGQgJiYgdml0ZSBwcmV2aWV3XCIsXG4gICAgXCJzdGFydFwiOiBcInBucG0gZGV2ICYgd2FpdC1vbiB0Y3A6MzAwMCAtdlwiLFxuICAgIFwidGVzdFwiOiBcInZpdGVzdFwiLFxuICAgIFwiY292ZXJhZ2VcIjogXCJ2aXRlc3QgcnVuIC0tY292ZXJhZ2VcIixcbiAgICBcInRlc3QtZTJlXCI6IFwicGxheXdyaWdodCB0ZXN0IC0taGVhZGVkXCIsXG4gICAgXCJ0ZXN0OmNpXCI6IFwidml0ZXN0IHJ1biAtLWNvdmVyYWdlXCIsXG4gICAgXCJ0ZXN0OmNpLWUyZVwiOiBcInBsYXl3cmlnaHQgdGVzdFwiLFxuICAgIFwibGludFwiOiBcImVzbGludCAuIC0tZXh0IC52dWUsLmpzLC5qc3gsLmNqcywubWpzLC50cywudHN4LC5jdHMsLm10cyAtLWZpeCAtLWlnbm9yZS1wYXRoIC5naXRpZ25vcmVcIixcbiAgICBcInR5cGUtY2hlY2tcIjogXCJ2dWUtdHNjIC0tYnVpbGQgLS1mb3JjZVwiXG4gIH0sXG4gIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkB1bmhlYWQvdnVlXCI6IFwiMS45LjE0XCIsXG4gICAgXCJwaW5pYVwiOiBcIjIuMi4wXCIsXG4gICAgXCJ2aWRlby5qc1wiOiBcIl44LjE5LjFcIixcbiAgICBcInZpZGVvanMtY29udHJpYi1lbWVcIjogXCJeNS41LjFcIixcbiAgICBcInZ1ZVwiOiBcIjMuNC4yOVwiLFxuICAgIFwidnVlLXJvdXRlclwiOiBcIjQuNC4wXCJcbiAgfSxcbiAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQGVnb2lzdC90YWlsd2luZGNzcy1pY29uc1wiOiBcIjEuOC4xXCIsXG4gICAgXCJAaWNvbmlmeS9qc29uXCI6IFwiMi4yLjIyMFwiLFxuICAgIFwiQGljb25pZnkvdHlwZXNcIjogXCIyLjAuMFwiLFxuICAgIFwiQHBpbmlhL3Rlc3RpbmdcIjogXCIwLjEuM1wiLFxuICAgIFwiQHBsYXl3cmlnaHQvdGVzdFwiOiBcIjEuNDUuMFwiLFxuICAgIFwiQHJ1c2hzdGFjay9lc2xpbnQtcGF0Y2hcIjogXCIxLjEwLjNcIixcbiAgICBcIkB0YWlsd2luZGNzcy9hc3BlY3QtcmF0aW9cIjogXCIwLjQuMlwiLFxuICAgIFwiQHRhaWx3aW5kY3NzL2Zvcm1zXCI6IFwiMC41LjdcIixcbiAgICBcIkB0YWlsd2luZGNzcy9saW5lLWNsYW1wXCI6IFwiMC40LjRcIixcbiAgICBcIkB0YWlsd2luZGNzcy90eXBvZ3JhcGh5XCI6IFwiMC41LjEzXCIsXG4gICAgXCJAdHNjb25maWcvbm9kZTIwXCI6IFwiMjAuMS40XCIsXG4gICAgXCJAdHlwZXMvanNkb21cIjogXCIyMS4xLjdcIixcbiAgICBcIkB0eXBlcy9sb2Rhc2gtZXNcIjogXCI0LjE3LjEyXCIsXG4gICAgXCJAdHlwZXMvbm9kZVwiOiBcIjIwLjE0LjZcIixcbiAgICBcIkB0eXBlc2NyaXB0LWVzbGludC9lc2xpbnQtcGx1Z2luXCI6IFwiOC4wLjBcIixcbiAgICBcIkB0eXBlc2NyaXB0LWVzbGludC9wYXJzZXJcIjogXCI4LjAuMFwiLFxuICAgIFwiQHZpdGVqcy9wbHVnaW4tdnVlXCI6IFwiNS4xLjBcIixcbiAgICBcIkB2aXRlc3QvY292ZXJhZ2UtdjhcIjogXCIyLjAuM1wiLFxuICAgIFwiQHZ1ZS9lc2xpbnQtY29uZmlnLXByZXR0aWVyXCI6IFwiOS4wLjBcIixcbiAgICBcIkB2dWUvZXNsaW50LWNvbmZpZy10eXBlc2NyaXB0XCI6IFwiMTMuMC4wXCIsXG4gICAgXCJAdnVlL3Rlc3QtdXRpbHNcIjogXCIyLjQuNlwiLFxuICAgIFwiQHZ1ZS90c2NvbmZpZ1wiOiBcIjAuNS4xXCIsXG4gICAgXCJhdXRvcHJlZml4ZXJcIjogXCIxMC40LjE5XCIsXG4gICAgXCJjcm9zcy1lbnZcIjogXCI3LjAuM1wiLFxuICAgIFwiY3NzbmFub1wiOiBcIjcuMC4zXCIsXG4gICAgXCJlc2xpbnRcIjogXCJ+OC41Ny4xXCIsXG4gICAgXCJlc2xpbnQtY29uZmlnLXByZXR0aWVyXCI6IFwiOS4xLjBcIixcbiAgICBcImVzbGludC1wbHVnaW4taW1wb3J0XCI6IFwiMi4yOS4xXCIsXG4gICAgXCJlc2xpbnQtcGx1Z2luLW5cIjogXCIxNy4xMC4xXCIsXG4gICAgXCJlc2xpbnQtcGx1Z2luLXBsYXl3cmlnaHRcIjogXCIxLjYuMlwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi1wcm9taXNlXCI6IFwiNy4wLjBcIixcbiAgICBcImVzbGludC1wbHVnaW4tc2VjdXJpdHlcIjogXCIzLjAuMVwiLFxuICAgIFwiZXNsaW50LXBsdWdpbi12dWVcIjogXCI5LjI3LjBcIixcbiAgICBcImpzZG9tXCI6IFwiMjQuMS4wXCIsXG4gICAgXCJsb2Rhc2gtZXNcIjogXCI0LjE3LjIxXCIsXG4gICAgXCJucG0tcnVuLWFsbDJcIjogXCI2LjIuMFwiLFxuICAgIFwicG9zdGNzc1wiOiBcIjguNC4zOFwiLFxuICAgIFwicG9zdGNzcy1pbXBvcnRcIjogXCIxNi4xLjBcIixcbiAgICBcInBvc3Rjc3MtbmVzdGluZ1wiOiBcIjEyLjEuNVwiLFxuICAgIFwicHJldHRpZXJcIjogXCIzLjMuMlwiLFxuICAgIFwidGFpbHdpbmRjc3NcIjogXCIzLjQuNFwiLFxuICAgIFwidHlwZXNjcmlwdFwiOiBcIjUuNS4yXCIsXG4gICAgXCJ1bnBsdWdpbi1hdXRvLWltcG9ydFwiOiBcIjAuMTguMFwiLFxuICAgIFwidW5wbHVnaW4tdnVlLWNvbXBvbmVudHNcIjogXCIwLjI3LjBcIixcbiAgICBcInZpdGVcIjogXCI1LjMuMVwiLFxuICAgIFwidml0ZS1wbHVnaW4tdnVlLWRldnRvb2xzXCI6IFwiNy4zLjJcIixcbiAgICBcInZpdGVzdFwiOiBcIjIuMC4zXCIsXG4gICAgXCJ2dWUtdHNjXCI6IFwiMi4wLjIxXCIsXG4gICAgXCJ3YWl0LW9uXCI6IFwiNy4yLjBcIlxuICB9LFxuICBcInBucG1cIjoge1xuICAgIFwib3ZlcnJpZGVzXCI6IHtcbiAgICAgIFwiZXNsaW50XCI6IFwiOC54XCJcbiAgICB9XG4gIH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBK1QsU0FBUyxtQ0FBbUM7QUFDM1csT0FBTyxTQUFTO0FBQ2hCLFNBQVMsZUFBZSxXQUFXO0FBQ25DLE9BQU8sZ0JBQWdCO0FBQ3ZCLE9BQU8sZ0JBQWdCO0FBQ3ZCLFNBQVMsb0JBQW9COzs7QUNIM0IsY0FBVzs7O0FERjBMLElBQU0sMkNBQTJDO0FBUXhQLFFBQVEsSUFBSSxtQkFBbUI7QUFDL0IsSUFBSSxRQUFRLElBQUksYUFBYSxjQUFjO0FBQ3pDLFVBQVEsSUFBSSx3QkFBdUIsb0JBQUksS0FBSyxHQUFFLFFBQVEsRUFBRSxTQUFTO0FBQ25FO0FBRUEsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsU0FBUztBQUFBLElBQ1AsSUFBSTtBQUFBLElBQ0osV0FBVztBQUFBLE1BQ1QsU0FBUztBQUFBLFFBQ1A7QUFBQSxRQUNBO0FBQUEsUUFDQTtBQUFBLFFBQ0E7QUFBQSxVQUNFLFdBQVcsQ0FBQyxVQUFVO0FBQUEsUUFDeEI7QUFBQSxRQUNBO0FBQUEsTUFDRjtBQUFBLE1BQ0EsS0FBSztBQUFBLE1BQ0wsYUFBYTtBQUFBLE1BQ2IsVUFBVTtBQUFBLFFBQ1IsU0FBUztBQUFBLE1BQ1g7QUFBQSxJQUNGLENBQUM7QUFBQSxJQUNELFdBQVc7QUFBQSxNQUNULEtBQUs7QUFBQSxJQUNQLENBQUM7QUFBQSxFQUNIO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLGNBQWMsSUFBSSxJQUFJLFNBQVMsd0NBQWUsQ0FBQztBQUFBLElBQ3REO0FBQUEsRUFDRjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
